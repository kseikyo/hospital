{"ast":null,"code":"var _jsxFileName = \"/home/kseikyo/Dev/graphql-react-event-booking/frontend/src/pages/Consultas.js\";\nimport React, { Component } from 'react';\nimport './Consultas.css';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\n\nclass ConsultasPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      cancelando: false,\n      consultas: [],\n      medicos: []\n    };\n\n    this.startCreateConsultaHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.startCancelConsultaHandler = () => {\n      this.setState({\n        cancelando: true\n      });\n    };\n\n    this.modalCancelarConsulta = () => {\n      this.setState({\n        cancelando: false\n      });\n      const title = this.titleElRef.current.value;\n      const medico = this.findMedico(this.medicoElRef.current.value);\n      const date = this.dateElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      const price = '' + Math.floor(Math.random() * (600 - 351) + 350);\n\n      if (title.trim().length === 0 || date.trim().length === 0 || description.trim().length === 0) {\n        return;\n      }\n\n      const consulta = {\n        title,\n        medico,\n        price,\n        date,\n        description\n      };\n      console.log(consulta);\n      const requestBody = {\n        query: \"\\n                mutation {\\n                    cancelarConsulta(consultaInput: {title: \\\"\".concat(title, \"\\\", description: \\\"\").concat(description, \"\\\", medico: \\\"\").concat(medico, \"\\\", price:\\\"\").concat(price, \"\\\" date: \\\"\").concat(date, \"\\\"}) {\\n                        _id\\n                        title\\n                        description\\n                        date\\n                        creator {\\n                            _id\\n                            nome\\n                        }\\n                        medico {\\n                            nome\\n                        }\\n                    }\\n                }\\n            \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Authentication failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const title = this.titleElRef.current.value;\n      const medico = this.findMedico(this.medicoElRef.current.value);\n      const date = this.dateElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      const price = '' + Math.floor(Math.random() * (600 - 351) + 350);\n\n      if (title.trim().length === 0 || date.trim().length === 0 || description.trim().length === 0) {\n        return;\n      }\n\n      const consulta = {\n        title,\n        medico,\n        price,\n        date,\n        description\n      };\n      console.log(consulta);\n      const requestBody = {\n        query: \"\\n                mutation {\\n                    createConsulta(consultaInput: {title: \\\"\".concat(title, \"\\\", description: \\\"\").concat(description, \"\\\", medico: \\\"\").concat(medico, \"\\\", price:\\\"\").concat(price, \"\\\" date: \\\"\").concat(date, \"\\\"}) {\\n                        _id\\n                        title\\n                        description\\n                        date\\n                        creator {\\n                            _id\\n                            nome\\n                        }\\n                        medico {\\n                            nome\\n                        }\\n                    }\\n                }\\n            \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Authentication failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData.data);\n        this.fetchConsultas();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.titleElRef = React.createRef();\n    this.medicoElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchConsultas();\n    this.fetchMedicos();\n  }\n\n  findMedico(nome) {\n    let len = this.state.medicos.length;\n\n    for (let i = 0; i < len; i++) {\n      if (this.state.medicos[i].nome === nome) {\n        return '' + this.state.medicos[i]._id;\n      }\n    }\n  }\n\n  fetchConsultas() {\n    const userId = this.context.clienteId;\n    const requestBody = {\n      query: \"\\n                query {\\n                    userConsultas(userId: \\\"\".concat(userId, \"\\\"){\\n                        _id\\n                        title\\n                        description\\n                        date\\n                        creator {\\n                            _id\\n                            nome\\n                        }\\n                        medico {\\n                            _id\\n                            nome\\n                        }\\n                    }\\n                }\\n            \")\n    };\n    const token = this.context.token;\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Authentication failed');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const consultas = resData.data.consultas;\n      console.log(resData);\n      this.setState({\n        consultas: consultas\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  fetchMedicos() {\n    const requestBody = {\n      query: \"\\n                query {\\n                    medicos{\\n                        _id\\n                        nome\\n                    }\\n                }\\n            \"\n    };\n    const token = this.context.token;\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Authentication failed');\n      }\n\n      return res.json();\n    }).then(resData => {\n      const medicos = resData.data.medicos;\n      this.setState({\n        medicos: medicos\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let consultasList;\n    let medicosList;\n\n    if (this.state.consultas) {\n      consultasList = this.state.consultas.map(consulta => {\n        return React.createElement(\"li\", {\n          key: consulta._id,\n          className: \"consultas__list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, consulta.title);\n      });\n    }\n\n    if (this.state.medicos) {\n      medicosList = this.state.medicos.map(medico => {\n        return React.createElement(\"option\", {\n          key: medico._id,\n          value: medico.nome,\n          ref: this.medicoElRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, medico.nome);\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.creating && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Add Consulta\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Informa\\xE7\\xF5es sobre a consulta\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.titleElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"medico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Medicos dispon\\xEDveis\"), React.createElement(\"select\", {\n      id: \"medico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, medicosList)), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      rows: \"4\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })))), this.context.token && React.createElement(\"div\", {\n      className: \"consultas-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Agende sua consulta!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateConsultaHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Criar consulta\")), React.createElement(\"ul\", {\n      className: \"consultas__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, consultasList));\n  }\n\n}\n\nConsultasPage.contextType = AuthContext;\nexport default ConsultasPage;","map":{"version":3,"sources":["/home/kseikyo/Dev/graphql-react-event-booking/frontend/src/pages/Consultas.js"],"names":["React","Component","Modal","Backdrop","AuthContext","ConsultasPage","constructor","props","state","creating","cancelando","consultas","medicos","startCreateConsultaHandler","setState","startCancelConsultaHandler","modalCancelarConsulta","title","titleElRef","current","value","medico","findMedico","medicoElRef","date","dateElRef","description","descriptionElRef","price","Math","floor","random","trim","length","consulta","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","catch","err","modalConfirmHandler","fetchConsultas","modalCancelHandler","createRef","componentDidMount","fetchMedicos","nome","len","i","_id","userId","clienteId","render","consultasList","medicosList","map","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Consultas.css';\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass ConsultasPage extends Component {\r\n    state = {\r\n        creating: false,\r\n        cancelando: false,\r\n        consultas: [],\r\n        medicos: []\r\n    };\r\n\r\n    constructor(props) { \r\n        super(props);\r\n        this.titleElRef = React.createRef();\r\n        this.medicoElRef = React.createRef();\r\n        this.dateElRef = React.createRef();\r\n        this.descriptionElRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchConsultas();\r\n        this.fetchMedicos();\r\n    }\r\n\r\n    static contextType = AuthContext;\r\n\r\n    startCreateConsultaHandler = () => {\r\n        this.setState({creating: true});\r\n    };\r\n\r\n    startCancelConsultaHandler = () => {\r\n        this.setState({cancelando: true});\r\n    };\r\n\r\n    modalCancelarConsulta = () => {\r\n        this.setState({cancelando: false});\r\n        const title = this.titleElRef.current.value;\r\n        const medico = this.findMedico(this.medicoElRef.current.value);\r\n        const date = this.dateElRef.current.value;\r\n        const description = this.descriptionElRef.current.value;\r\n        const price = ''+Math.floor(Math.random()*(600-351)+350);\r\n        if (\r\n            title.trim().length === 0 || \r\n            date.trim().length === 0 ||\r\n            description.trim().length === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const consulta = {title, medico, price, date, description};\r\n\r\n        console.log(consulta);\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    cancelarConsulta(consultaInput: {title: \"${title}\", description: \"${description}\", medico: \"${medico}\", price:\"${price}\" date: \"${date}\"}) {\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        creator {\r\n                            _id\r\n                            nome\r\n                        }\r\n                        medico {\r\n                            nome\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n            };\r\n        \r\n        const token = this.context.token;\r\n        \r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+ token\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Authentication failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            console.log(resData.data);\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    modalConfirmHandler = () => {\r\n        \r\n        this.setState({creating: false});      \r\n        const title = this.titleElRef.current.value;\r\n        const medico = this.findMedico(this.medicoElRef.current.value);\r\n        const date = this.dateElRef.current.value;\r\n        const description = this.descriptionElRef.current.value;\r\n        const price = ''+Math.floor(Math.random()*(600-351)+350);\r\n        if (\r\n            title.trim().length === 0 || \r\n            date.trim().length === 0 ||\r\n            description.trim().length === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const consulta = {title, medico, price, date, description};\r\n\r\n        console.log(consulta);\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    createConsulta(consultaInput: {title: \"${title}\", description: \"${description}\", medico: \"${medico}\", price:\"${price}\" date: \"${date}\"}) {\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        creator {\r\n                            _id\r\n                            nome\r\n                        }\r\n                        medico {\r\n                            nome\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n            };\r\n        \r\n        const token = this.context.token;\r\n        \r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+ token\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Authentication failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            console.log(resData.data);\r\n            this.fetchConsultas();\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    modalCancelHandler = () => {\r\n        this.setState({creating: false});\r\n    };\r\n\r\n    findMedico(nome) {\r\n        let len = this.state.medicos.length;\r\n        for(let i = 0; i < len; i++){\r\n            if(this.state.medicos[i].nome === nome) {\r\n                return ''+this.state.medicos[i]._id;\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchConsultas() {\r\n        \r\n        const userId = this.context.clienteId;\r\n        const requestBody = {\r\n            query: `\r\n                query {\r\n                    userConsultas(userId: \"${userId}\"){\r\n                        _id\r\n                        title\r\n                        description\r\n                        date\r\n                        creator {\r\n                            _id\r\n                            nome\r\n                        }\r\n                        medico {\r\n                            _id\r\n                            nome\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n            };\r\n        const token = this.context.token;\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+ token\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Authentication failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            const consultas = resData.data.consultas;\r\n            console.log(resData);\r\n            this.setState({consultas: consultas});\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    fetchMedicos() {\r\n        const requestBody = {\r\n            query: `\r\n                query {\r\n                    medicos{\r\n                        _id\r\n                        nome\r\n                    }\r\n                }\r\n            `\r\n            };\r\n        const token = this.context.token;\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+ token\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Authentication failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            const medicos = resData.data.medicos;\r\n            this.setState({medicos: medicos});\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let consultasList;\r\n        let medicosList;\r\n        if(this.state.consultas) {\r\n            consultasList = this.state.consultas.map(consulta => {\r\n                return <li key={consulta._id} className=\"consultas__list-item\">{consulta.title}</li>;\r\n            });\r\n        }\r\n        if(this.state.medicos) {\r\n            medicosList = this.state.medicos.map(medico => {\r\n                return <option key={medico._id} value={medico.nome} ref={this.medicoElRef}>{medico.nome}</option>\r\n            });\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.creating && <Backdrop/>}\r\n                {this.state.creating && \r\n                <Modal \r\n                    title='Add Consulta' \r\n                    canCancel canConfirm \r\n                    onCancel={this.modalCancelHandler}\r\n                    onConfirm={this.modalConfirmHandler}\r\n                >\r\n                    <form>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"title\">Informações sobre a consulta</label>\r\n                            <input type=\"text\" id=\"title\" ref={this.titleElRef}></input>\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"medico\">Medicos disponíveis</label>\r\n                            <select id=\"medico\">\r\n                                {medicosList}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"date\">Date</label>\r\n                            <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef}></input>\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <textarea  id=\"description\" rows=\"4\" ref={this.descriptionElRef}></textarea>\r\n                        </div>\r\n                    </form>\r\n                </Modal>}\r\n                {this.context.token && <div className=\"consultas-control\">\r\n                    <p>Agende sua consulta!</p>\r\n                    <button className=\"btn\" onClick={this.startCreateConsultaHandler}>Criar consulta</button>\r\n                </div>}\r\n                <ul className=\"consultas__list\">\r\n                    {consultasList}\r\n                </ul>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConsultasPage;"]},"metadata":{},"sourceType":"module"}