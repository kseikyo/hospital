{"ast":null,"code":"var _jsxFileName = \"/home/kseikyo/Dev/graphql-react-event-booking/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = consulta => {\n      consulta.prconsultaDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n                query {\\n                    login(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\"){\\n                        userId\\n                        token\\n                        tokenExpiration\\n                    }\\n                }\\n            \")\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: \"\\n                mutation {\\n                    createUser(userInput: {email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\"}) {\\n                        _id\\n                        email\\n                    }\\n                }\\n            \")\n        };\n      }\n\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Authentication failed');\n        }\n\n        return res.json();\n      }).then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.switchModeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Go to\", this.state.isLogin ? ' Signup' : ' Login')));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/home/kseikyo/Dev/graphql-react-event-booking/frontend/src/pages/Auth.js"],"names":["React","Component","AuthContext","AuthPage","constructor","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","consulta","prconsultaDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","context","userId","tokenExpiration","catch","err","console","log","createRef","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Auth.css';\r\nimport AuthContext from '../context/auth-context';\r\nclass AuthPage extends Component {\r\n    state = {\r\n        isLogin: true\r\n    }\r\n\r\n    static contextType = AuthContext;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.emailEl = React.createRef();\r\n        this.passwordEl = React.createRef();\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isLogin: !prevState.isLogin};\r\n        });\r\n    }\r\n\r\n    submitHandler = (consulta) => {\r\n        consulta.prconsultaDefault();\r\n        const email = this.emailEl.current.value;\r\n        const password = this.passwordEl.current.value;\r\n\r\n        if (email.trim().length === 0 || password.trim().length === 0) {\r\n            return;\r\n        }\r\n        let requestBody = {\r\n            query: `\r\n                query {\r\n                    login(email: \"${email}\", password: \"${password}\"){\r\n                        userId\r\n                        token\r\n                        tokenExpiration\r\n                    }\r\n                }\r\n            `\r\n        };\r\n\r\n        if (!this.state.isLogin){\r\n            requestBody = {\r\n            query: `\r\n                mutation {\r\n                    createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\r\n                        _id\r\n                        email\r\n                    }\r\n                }\r\n            `\r\n            };\r\n        }\r\n        \r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Authentication failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            if(resData.data.login.token) {\r\n                this.context.login(\r\n                    resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration\r\n                );\r\n\r\n            }\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"email\">E-mail</label>\r\n                <input type=\"email\" id=\"email\" ref={this.emailEl}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" ref={this.passwordEl}></input>\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button type=\"submit\">Submit</button>\r\n                <button type=\"button\" onClick={this.switchModeHandler}>Go to\r\n                 {this.state.isLogin ? ' Signup': ' Login'}</button>\r\n            </div>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthPage;"]},"metadata":{},"sourceType":"module"}